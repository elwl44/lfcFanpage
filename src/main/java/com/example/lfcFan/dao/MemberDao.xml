<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lfcFan.dao.MemberDao">
	<insert id="join" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO member
		<set>
			regDate = NOW(),
			updateDate = NOW(),
			<if test="loginId != null">
				loginId = #{loginId},
			</if>
			<if test="loginPw != null">
				loginPw = #{loginPw},
			</if>
			<if test="name != null">
				`name` = #{name},
			</if>
			<if test="email != null">
				`email` = #{email},
			</if>
			visitCount=0
		</set>
	</insert>

	<select id="getMemberByLoginId" resultType="Member">
		SELECT *
		FROM member
		WHERE loginId = #{loginId}
	</select>

	<select id="getMemberByEmail" resultType="Member">
		SELECT *
		FROM member
		WHERE email = #{email}
	</select>

	<select id="getMemberByNameAndEmail" resultType="Member">
		SELECT *
		FROM
		member
		WHERE `name` = #{name}
		AND email = #{email}
		LIMIT 1
	</select>

	<select id="getMemberById" resultType="Member">
		SELECT *
		FROM member
		WHERE
		id = #{id}
	</select>

	<update id="modify">
		UPDATE member
		<set>
			updateDate = NOW(),
			<if test="name != null">
				`name` = #{name},
			</if>
			<if test="email != null">
				`email` = #{email},
			</if>
			<if test="loginPw != null">
				loginPw = #{loginPw},
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="modifyPw">
		UPDATE member
		<set>
			updateDate = NOW(),
			<if test="newloginPw != null">
				loginPw = #{newloginPw},
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<delete id="secessionById">
		DELETE FROM member
		WHERE id = #{id}
	</delete>

	<select id="getTotalMemberCount" resultType="int">
		SELECT COUNT(*)
		FROM
		Member
	</select>

	<select id="getTotalBanMemberCount" resultType="int">
		SELECT COUNT(*)
		FROM
		banMember
		where status=1
	</select>

	<select id="getForPrintMembers" resultType="Member">
		SELECT *
		from member
		ORDER BY authLevel desc, regDate DESC
		<if test="limitFrom != null and limitTake != null">
			LIMIT #{limitFrom}, #{limitTake}
		</if>
	</select>

	<update id="setMemberLoginTime">
		UPDATE member
		<set>
			lastLogin = NOW(),
			visitCount=visitCount+1
		</set>
		WHERE id = #{id}
	</update>

	<update id="banDateCheck">
		UPDATE banMember
		<set>
			status = 0,
			updateDate=NOW(),
		</set>
		WHERE finishDate <![CDATA[<=]]>
		NOW()
	</update>

	<select id="getMemberBanCheck" resultType="int">
		SELECT IFNULL(SUM(STATUS), 0)
		FROM banMember
		WHERE memberId =
		#{memberid}
		and finishDate <![CDATA[>=]]>NOW()
	</select>

	<select id="getMemberBanDate" resultType="string">
		SELECT finishDate FROM
		banMember WHERE memberId=3
		AND finishDate <![CDATA[>=]]>
		NOW()
	</select>

	<select id="getForPrintBanMembers" resultMap="banmember">
		SELECT B.*,
		M.loginId AS extra__writer,
		M.name AS extra__name
		FROM
		banmember AS B
		INNER JOIN
		MEMBER AS M
		ON B.memberId = M.id
		where status=1
		<if test="limitFrom != null and limitTake != null">
			LIMIT #{limitFrom}, #{limitTake}
		</if>
	</select>


	<resultMap type="BanMember" id="banmember">
		<id property="id" column="id" />
		<id property="memberid" column="memberId" />
		<id property="startDate" column="startDate" />
		<id property="updateDate" column="updateDate" />
		<id property="finishDate" column="finishDate" />
		<id property="status" column="status" />
		<id property="body" column="body" />
		<id property="staff" column="staff" />
		<association property="extra" javaType="map">
			<id property="nickname" column="extra__writer" />
			<id property="name" column="extra__name" />
		</association>
	</resultMap>
</mapper>